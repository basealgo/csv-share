//@version=5
// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © Unpredictable_

strategy('S.A-Oversold Finder DENEME 4', overlay=true, max_labels_count=500, max_boxes_count=500,calc_on_order_fills=false, default_qty_type=strategy.percent_of_equity, default_qty_value=100,pyramiding=0, initial_capital=1000, currency='USD', slippage=0)

longonoff = input.bool(defval=false, title='🟢Long ',group='Type', inline='Lononoff')
shortonoff = input.bool(defval=false, title='🔴Short ',group='Type',inline='Lononoff')


long_use_ema = input.bool(title="Ema", defval=false,group='🟢Long Kombin Koşulları',inline='longg')
long_use_supertrend = input.bool(title="Supertrend", defval=false,group='🟢Long Kombin Koşulları',inline='longg')
long_use_rsi = input.bool(title="Rsi", defval=false,group='🟢Long Kombin Koşulları',inline='longg')
long_use_bollinger = input.bool(title="Bollinger Band", defval=false,group='🟢Long Kombin Koşulları',inline='longg')
long_use_cm_williams = input.bool(title="CM Williams", defval=false,group='🟢Long Kombin Koşulları',inline='longg')
long_use_bbw = input.bool(title="BBW", defval=false,group='🟢Long Kombin Koşulları',inline='longg')


short_use_ema = input.bool(title="Ema", defval=false,group='🔴Short Kombin Koşulları',inline='shortt')
short_use_supertrend = input.bool(title="Supertrend", defval=false,group='🔴Short Kombin Koşulları',inline='shortt')
short_use_rsi = input.bool(title="Rsi", defval=false,group='🔴Short Kombin Koşulları',inline='shortt')
short_use_bollinger = input.bool(title="Bollinger Band", defval=false,group='🔴Short Kombin Koşulları',inline='shortt')
short_use_cm_williams = input.bool(title="CM Williams", defval=false,group='🔴Short Kombin Koşulları',inline='shortt')
short_use_bbw = input.bool(title="BBW", defval=false,group='🔴Short Kombin Koşulları',inline='shortt')

tpkosulselect = input.string(title='Tp Seçimi ?', defval='TP-Algo',options =['TP-Algo','TP-%'],inline='tp')
slkosulselect = input.string(title='Stop Seçimi ?', defval='SL-Algo',options =['SL-Algo','SL-%'],inline='sl')

TakeProfitPerc = input.float(title="Take Profit (%)", minval=0.0, step=0.1, defval=0.9,inline='tp') * 0.01
stopProfitPerc = input.float(title="Stop Loss (%)", minval=0.0, step=0.1, defval=2.1,inline='sl') * 0.01


ustema  = input.bool(defval=false, title='Ema ?',group='Göstergeler',inline='gösterge')
strend  = input.bool(defval=true, title='Supertrend ?',group='Göstergeler',inline='gösterge')
bband   = input.bool(defval=true, title='Bolinger Bantları ?',group='Göstergeler',inline='gösterge')


long_rsi_dip = input.bool(defval=true, title='Rsi Dip Gösterilsin mi ?',group='🟢Long Göstergeler')
long_bbbuy   = input.bool(defval=true, title='BB Dip Gösterilsin mi ?',group='🟢Long Göstergeler')
long_cm_dip  = input.bool(defval=true, title='Cm_willims Dip Gösterilsin mi ?',group='🟢Long Göstergeler')
long_bbwdip  = input.bool(defval=true, title='BBW% Gösterilsin mi ?',group='🟢Long Göstergeler')

short_rsi_dip = input.bool(defval=true, title='Rsi Tepe Gösterilsin mi ?',group='🔴Short Göstergeler')
short_bbbuy   = input.bool(defval=true, title='BB Tepe Gösterilsin mi ?',group='🔴Short Göstergeler')
short_cm_dip  = input.bool(defval=true, title='Cm_willims Tepe Gösterilsin mi ?',group='🔴Short Göstergeler')
short_bbwdip  = input.bool(defval=true, title='BBW% Gösterilsin mi ?',group='🔴Short Göstergeler')



long_rsikosul      = input.string(title='🟢Long Rsi Koşul Seçimi', defval='crossunder(src,oversold)',options =['crossver(src,overbought)','crossver(src,oversold)','crossunder(src,oversold)'])
long_bolingerkosul = input.string(title='🟢Long Bolinger Band Koşul Seçimi', defval='crossunder(src,lower)',options =['crossver(src,upper)','crossver(src,lower)','crossunder(src,lower)'])
long_cm_kosul      = input.string(title='🟢Long Cm_willims_Vix_Fix Koşul Seçimi', defval='wvf >= rangeHigh',options =['wvf >= rangeHigh','wvf >= upperBand or wvf >= rangeHigh','wvf >= rangeHigh-2','wvf >= upperBand or wvf >= rangeHigh-2',
 'wvf2 >= rangeHigh','wvf2 >= upperBand or wvf2 >= rangeHigh','wvf2 >= rangeHigh-2','wvf2 >= upperBand or wvf2 >= rangeHigh-2'])
long_bbwkosul 	  = input.string(title='🟢Long BBW Koşul Seçimi', defval='bbw <= ta.lowest(bbw*multtrip, comp_len)',options =['bbw <= ta.lowest(bbw*multtrip, comp_len)','bbw >= ta.highest(bbw*multtrip, comp_len)'])


short_rsikosul      = input.string(title='🔴Short Rsi Koşul Seçimi', defval='crossver(src,overbought)',options =['crossunder(src,overbought)','crossunder(src,oversold)','crossver(src,overbought)'])
short_bolingerkosul = input.string(title='🔴Short Bolinger Band Koşul Seçimi', defval='crossver(src,upper)',options =['crossunder(src,upper)','crossunder(src,lower)','crossver(src,upper)'])
short_cm_kosul      = input.string(title='🔴Short Cm_willims_Vix_Fix Koşul Seçimi', defval='wvf <= rangeLow',options =['wvf <= rangeLow','wvf <= lowerBand or wvf <= rangeLow','wvf <= rangeLow-2','wvf <= lowerBand or wvf <= rangeLow-2',
 'wvf2 <= rangeLow','wvf2 <= lowerBand or wvf <= rangeLow','wvf2 <= rangeLow-2','wvf2 <= lowerBand or wvf <= rangeLow-2'])
short_bbwkosul 	  = input.string(title='🔴Short BBW Koşul Seçimi', defval='bbw >= ta.highest(bbw*multtrip, comp_len)',options =['bbw <= ta.lowest(bbw*multtrip, comp_len)','bbw >= ta.highest(bbw*multtrip, comp_len)'])





atrPeriod = input.int(defval=10, title="ATR Length",group='Strend')
factor = input.float(defval=3.0, title="Factor", step = 0.01,group='Strend')

length = input.int(defval=14,title='Rsi Uzunluk',group='Rsi')
overSold = input.int(defval=30,title='Rsi Aşırı Satış',group='Rsi')
overBought = input.int(defval=70,title='Rsi Aşırı Alış',group='Rsi')
price = input.source(defval=close,title='Source',group='Rsi')


pd = input.int(defval=22, minval=1, step=1, title='LookBack Period Standard Deviation High',group='Cmwillims')
bbl = input.int(defval=20, minval=1, step=1, title='Bolinger Band Length',group='Cmwillims')
mult = input.float(defval=2.0, minval=1, maxval=5, title='Bollinger Band Standard Devaition Up',group='Cmwillims')
lb = input.int(defval=50, minval=1, title='Look Back Period Percentile High',group='Cmwillims')
ph = input.float(defval=0.85, minval=0.1, step=0.01, title='Highest Percentile - 0.90=90%, 0.95=95%, 0.99=99%',group='Cmwillims')
pl = input.float(defval=0.95, minval=0.1, step=0.01, title='Lowest Percentile - 1.10=90%, 1.05=95%, 1.01=99%',group='Cmwillims')


comp_len = input(defval=180, title='BBW Back comparison (bars)',group='Bbw')
length3 = input.int(defval=20, title='BBW Uzunluk', minval=1,group='Bbw')
src3 = input(defval=close, title='BBW Source',group='Bbw')
mult3 = input.float(defval=2.0, title='BBW Çarpan', minval=0.001, maxval=50,group='Bbw')
multtrip = input.float(defval=1, minval=1, step=0.1, maxval=10, title="BBW*",group='Bbw')

i_htf      = input.timeframe(defval='', title='Zaman',group='Ema')
i_maLenSel = input.string(title='MA 1 Tip', defval='EMA', options = ['EMA', 'SMA'],group='Ema')
i_maLen    = input(defval=200, title='Ma 1 Trend Uzunluk',group='Ema')

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//RSI İNDİCATÖRÜ
vrsi = ta.rsi(price, length)
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
ISLONGWAY                   = strategy.position_size > 0 ? true : strategy.position_size < 0 ? false : na
//SÜPERTREND İNDİCATÖRÜ
heikinashi_open = request.security(ticker.heikinashi(syminfo.tickerid), timeframe.period, open)
heikinashi_high = request.security(ticker.heikinashi(syminfo.tickerid), timeframe.period, high)
heikinashi_low  = request.security(ticker.heikinashi(syminfo.tickerid), timeframe.period, low)
heikinashi_close= request.security(ticker.heikinashi(syminfo.tickerid), timeframe.period, close)
heikinashi_color = heikinashi_open < heikinashi_close ? #53b987 : #eb4d5c
//plotbar(heikinashi_open, heikinashi_high, heikinashi_low, heikinashi_close, color=heikinashi_color)

x_sma(x, y) =>
    sumx = 0.0
    for i = 0 to y - 1
        sumx := sumx + x[i] / y
    sumx

x_rma(src, length) =>
    ads = x_sma(src, length)
	alpha = 1/length
	sum = 0.0
	sum := na(sum[1]) ? ads : alpha * src + (1 - alpha) * nz(sum[1])

x_atr(length) =>
    trueRange = na(heikinashi_high[1])? heikinashi_high-heikinashi_low : math.max(math.max(heikinashi_high - heikinashi_low, math.abs(heikinashi_high - heikinashi_close[1])), math.abs(heikinashi_low - heikinashi_close[1]))
    //true range can be also calculated with ta.tr(true)
    x_rma(trueRange, length)

x_supertrend(factor, atrPeriod) =>
	src = (heikinashi_high+heikinashi_low)/2
	atr = x_atr(atrPeriod)
	upperBand2 = src + factor * atr
	lowerBand2 = src - factor * atr
	prevLowerBand = nz(lowerBand2[1])
	prevUpperBand = nz(upperBand2[1])

	lowerBand2 := lowerBand2 > prevLowerBand or heikinashi_close[1] < prevLowerBand ? lowerBand2 : prevLowerBand
	upperBand2 := upperBand2 < prevUpperBand or heikinashi_close[1] > prevUpperBand ? upperBand2 : prevUpperBand
	int direction = na
	float superTrend = na
	prevSuperTrend = superTrend[1]
	if na(atr[1])
		direction := 1
	else if prevSuperTrend == prevUpperBand
		direction := heikinashi_close > upperBand2 ? -1 : 1
	else
		direction := heikinashi_close < lowerBand2 ? 1 : -1
	superTrend := direction == -1 ? lowerBand2 : upperBand2
	[superTrend, direction]


[supertrend, direction] = x_supertrend(factor, atrPeriod)

SupTrend = direction < 0 ? supertrend : na
SdownTrend = direction < 0? na : supertrend

int trend = 0

if trend == 0 and SupTrend
    trend := 1

else if trend == 0 and SdownTrend
    trend := -1
    
else if trend == 1 and SdownTrend
    trend := -1
    
else if trend == -1 and SupTrend
    trend := 1

else
    trend := trend[1]

al = trend[1] != 1 and trend == 1
sat = trend[1] != -1 and trend == -1

// bgcolor(al ? color.new(color.green,70) : na)
// bgcolor(sat ? color.new(color.red,70) : na)
////////////////////////////////////////////////////////////////////////////////
////LONG CM_WİLLİMS İNDİCATÖRÜ
wvf = (ta.highest(close, pd) - low) / ta.highest(close, pd) * 100
wvf2 = (ta.highest(close, pd) - high) / ta.highest(close, pd) * 100
sDev = mult * ta.stdev(wvf, bbl)
midLine = ta.sma(wvf, bbl)
upperBand = midLine + sDev
rangeHigh = ta.highest(wvf, lb) * ph
//////////////////////////////////////////////////////////////////////////////////
////SHORT CM_WİLLİMS İNDİCATÖRÜ--
wvf22 = (ta.lowest(close, pd) - high) / ta.lowest(close, pd) *100
wvf223 = (ta.lowest(close, pd) - low) / ta.lowest(close, pd) * 100
sDevaa = mult * ta.stdev(wvf22, bbl)
midLineaa = ta.sma(wvf22, bbl)
lowerBand = midLineaa - sDevaa
rangeLow = ta.lowest(wvf22, lb) * pl
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//BBW İNDİCATÖRÜ
basisbbw = ta.sma(src3, length3)
devbbw = mult3 * ta.stdev(src3, length3)
upperbbw = basisbbw + devbbw
lowerbbw = basisbbw - devbbw
bbw = (upperbbw-lowerbbw)/basisbbw

//squeeze = bbw <= ta.lowest(bbw*multtrip, comp_len)
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//LONG FONKSİYON
lrsilong()=>
	switch long_rsikosul
		'crossver(src,overbought)'   => ta.crossover(vrsi,overBought)
		'crossver(src,oversold)' 	 => ta.crossover(vrsi,overSold)
		'crossunder(src,oversold)' => ta.crossunder(vrsi,overSold)
lbolingerlong()=>
	switch long_bolingerkosul
		'crossver(src,upper)' 	=> ta.crossover(src3,upperbbw)
		'crossver(src,lower)' 	=> ta.crossover(src3,lowerbbw)
		'crossunder(src,lower)' => ta.crossunder(src3,lowerbbw)
lcm_willimslong()=>
	switch long_cm_kosul
		'wvf >= rangeHigh' 						   => (wvf >= rangeHigh) 
		'wvf >= upperBand or wvf >= rangeHigh'     => (wvf >= upperBand or wvf >= rangeHigh)
		'wvf >= rangeHigh-2' 					   => (wvf >= rangeHigh) and (ta.crossunder(wvf, upperBand) or ta.crossunder(ta.sma(wvf, lb), wvf))		
		'wvf >= upperBand or wvf >= rangeHigh-2'   => (wvf >= upperBand or wvf >= rangeHigh) and (ta.crossunder(wvf, upperBand) or ta.crossunder(ta.sma(wvf, lb), wvf))
		
		'wvf2 >= rangeHigh' 					   => (wvf2 >= rangeHigh)
		'wvf2 >= upperBand or wvf2 >= rangeHigh'   => (wvf2 >= upperBand or wvf2 >= rangeHigh)
		'wvf2 >= rangeHigh-2' 					   => (wvf2 >= rangeHigh) and (ta.crossunder(wvf2, upperBand) or ta.crossunder(ta.sma(wvf2, lb), wvf2))		
		'wvf2 >= upperBand or wvf2 >= rangeHigh-2' => (wvf2 >= upperBand or wvf2 >= rangeHigh) and (ta.crossunder(wvf2, upperBand) or ta.crossunder(ta.sma(wvf2, lb), wvf2))
lbbwlong()=>
	switch long_bbwkosul
		'bbw <= ta.lowest(bbw*multtrip, comp_len)' => bbw <= ta.lowest(bbw*multtrip, comp_len)
        'bbw >= ta.highest(bbw*multtrip, comp_len)' => bbw >= ta.highest(bbw*multtrip, comp_len)
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//SHORT FONKSİYON
srsilong()=>
	switch short_rsikosul
		'crossunder(src,overbought)'   => ta.crossunder(vrsi,overBought)
		'crossunder(src,oversold)' 	   => ta.crossunder(vrsi,overSold)
		'crossver(src,overbought)' 	   => ta.crossover(vrsi,overBought)

sbolingerlong()=>
	switch short_bolingerkosul
		'crossunder(src,upper)' 	=> ta.crossunder(src3,upperbbw)
		'crossunder(src,lower)' 	=> ta.crossunder(src3,lowerbbw)
		'crossver(src,upper)' 		=> ta.crossover(src3,upperbbw)

scm_willimslong()=>
	switch short_cm_kosul
		'wvf <= rangeLow' 						  => (wvf22 <= rangeLow)
		'wvf <= lowerBand or wvf <= rangeLow'     => (wvf22 <= lowerBand or wvf22 <= rangeLow)
		'wvf <= rangeLow-2' 					  => (wvf22 <= rangeLow) and (ta.crossunder(wvf22, lowerBand) or ta.crossover(ta.sma(wvf22, lb), wvf22))		
		'wvf <= lowerBand or wvf <= rangeLow-2'   => (wvf22 <= lowerBand or wvf22 <= rangeLow) and (ta.crossunder(wvf22, lowerBand) or ta.crossover(ta.sma(wvf22, lb), wvf22))
		
		'wvf2 <= rangeLow' 						  => (wvf223 <= rangeLow)
		'wvf2 <= lowerBand or wvf <= rangeLow'    => (wvf223 <= lowerBand or wvf223 <= rangeLow)
		'wvf2 <= rangeLow-2' 					  => (wvf223 <= rangeLow) and (ta.crossunder(wvf223, lowerBand) or ta.crossover(ta.sma(wvf223, lb), wvf223))			
		'wvf2 <= lowerBand or wvf <= rangeLow-2'  => (wvf223 <= lowerBand or wvf223 <= rangeLow) and (ta.crossunder(wvf223, lowerBand) or ta.crossover(ta.sma(wvf223, lb), wvf223))

sbbwlong()=>
	switch short_bbwkosul
		'bbw <= ta.lowest(bbw*multtrip, comp_len)' => bbw <= ta.lowest(bbw*multtrip, comp_len)
        'bbw >= ta.highest(bbw*multtrip, comp_len)' => bbw >= ta.highest(bbw*multtrip, comp_len)


Ematrend = request.security(syminfo.tickerid, i_htf, i_maLenSel == "SMA" ? ta.sma(close, i_maLen)[1] : ta.ema(close, i_maLen)[1], lookahead = barmerge.lookahead_on)  //No repaint
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
plotshape(strend and al, title='BUY', text='UP TREND', location=location.belowbar, style=shape.labelup, size=size.small, color=color.new(#5268f5, 40), textcolor=color.new(color.white, 0))
plotshape(strend and sat, title='SELL', text='DOWN TREND', location=location.abovebar, style=shape.labeldown, size=size.small, color=color.new(#8a2d2d, 40), textcolor=color.new(color.white, 0))
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Rsi
plotshape(long_rsi_dip and lrsilong(), title='Long Rsi', style=shape.arrowup, location=location.belowbar, color=color.new(color.green,60), size=size.small, text = "Rsi Dip", textcolor = color.new(#bbb8b8, 10))
plotshape(short_rsi_dip and srsilong(), title='Short Rsi', style=shape.arrowdown, location=location.abovebar, color=color.new(color.red,40), size=size.small, text = "Rsi Tepe", textcolor =color.new(#bbb8b8,10))
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Bolinger Bant
plotshape(long_bbbuy and lbolingerlong(), title='BB Buy', style=shape.triangleup, location=location.belowbar, color=color.new(#b8cc49, 60), size=size.normal, text = "BB Buy", textcolor = color.new(#fffafa, 10))
plotshape(short_bbbuy and sbolingerlong(), title='BB Sell', style=shape.triangledown, location=location.abovebar, color=color.new(#bd49cc, 60), size=size.normal, text = "BB Sell", textcolor = color.new(#fffafa, 10))
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//SuperTrend Heikin ashi
bodyMiddle = plot((heikinashi_open + heikinashi_close) / 2, display=display.none)
upTrend = plot(strend and direction < 0 ? supertrend : na, "Up Trend", color = color.green, style=plot.style_linebr)
downTrend = plot(strend and direction > 0 ? supertrend : na, "Down Trend", color = color.red, style=plot.style_linebr)
fill(bodyMiddle, upTrend, color.new(color.green, 90), fillgaps=false)
fill(bodyMiddle, downTrend, color.new(color.red, 90), fillgaps=false)
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Cm_Willims
plotshape(long_cm_dip and lcm_willimslong(), title='Long Cm_Willims', style=shape.xcross, location=location.belowbar, color=color.new(#4ed852, 60), size=size.large, text = "Cm Dip", textcolor = color.new(#fffafa, 10))
plotshape(short_cm_dip and scm_willimslong(), title='Short Cm_Willims', style=shape.xcross, location=location.abovebar, color=color.new(#704ee7, 25), size=size.large, text = "Cm Tepe", textcolor = color.new(#fffafa, 10))
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//BBw
// plotshape(long_bbwdip and lbbwlong(), title='BBW', style=shape.circle, location=location.belowbar, color=color.new(#2962ff, 60), size=size.huge, text = "BBW%", textcolor = color.new(#fffafa, 10))
// plotshape(short_bbwdip and sbbwlong(), title='BBW', style=shape.circle, location=location.abovebar, color=color.new(#b33f45, 60), size=size.huge, text = "BBW%", textcolor = color.new(#fffafa, 10))

//bgcolor(long_bbwdip and lbbwlong() ? color.new(#d1d5e0, 80) :na)
bgcolor(short_bbwdip and sbbwlong() ? color.new(#d1d5e0, 90) :na)
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//BOLİNGER BAND İNDİCATÖRÜ
plot(bband ? basisbbw :na , "Basis", color=#FF6D00)
p1 = plot(bband ? upperbbw :na, "Upper", color=color.new(#2962FF,0))
p2 = plot(bband ? lowerbbw :na, "Lower", color=color.new(#2962FF,0))
fill(p1, p2, title = "Background", color=color.rgb(33, 150, 243, 95))
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
plot(ustema ? Ematrend : na, color=#f57c00, linewidth=3 )
////////////////////////////////////////////////////////////////////////
long_condition = true
short_condition = true
////////////////////////////////////////////////////////////////////////
var bool ema_long =na
var bool supertrend_long = na
var bool rsi_long = na
var bool bollinger_long = na
var bool cm_williams_long = na
var bool bbw_long = na

var bool ema_short =na
var bool supertrend_short = na
var bool rsi_short = na
var bool bollinger_short = na
var bool cm_williams_short = na
var bool bbw_short = na
//////////////////////////////////////////////////////////////////////////////////////////////////////
///LONG BLOKLAR
if long_use_ema
    ema_long := Ematrend < close
    long_condition := long_condition and ema_long
if long_use_supertrend
    supertrend_long := direction < 0 
    long_condition := long_condition and supertrend_long
if long_use_rsi
    rsi_long := lrsilong()
    long_condition := long_condition and rsi_long
if long_use_bollinger
    bollinger_long := lbolingerlong()
    long_condition := long_condition and bollinger_long
if long_use_cm_williams
    cm_williams_long := lcm_willimslong()
    long_condition := long_condition and cm_williams_long
if long_use_bbw
    bbw_long := lbbwlong()
    long_condition := long_condition and bbw_long
///SHORT BLOKLAR
if short_use_ema
    ema_short := Ematrend > close
    short_condition := short_condition and ema_short
if short_use_supertrend
    supertrend_short := direction > 0 
    short_condition := short_condition and supertrend_short
if short_use_rsi
    rsi_short := srsilong()
    short_condition := short_condition and rsi_short
if short_use_bollinger
    bollinger_short := sbolingerlong()
    short_condition := short_condition and bollinger_short
if short_use_cm_williams
    cm_williams_short := scm_willimslong()
    short_condition := short_condition and cm_williams_short
if short_use_bbw
    bbw_short := sbbwlong()
    short_condition := short_condition and bbw_short
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
if long_condition and longonoff and strategy.position_size == 0
    strategy.entry('LONG',strategy.long)
if short_condition and shortonoff and strategy.position_size == 0
    strategy.entry('SHORT',strategy.short)
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Calculating ATR based Stop Loss
atr_val = ta.atr(14)
entry_atr = ta.valuewhen(strategy.position_size[1] != strategy.position_size ,atr_val,1)
entry_bbw = math.round(ta.valuewhen(strategy.position_size[1] != strategy.position_size ,bbw,0),2)
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
var int bbw_multiplier = 0
if entry_bbw <= 0.09
    bbw_multiplier := 3
else if entry_bbw > 0.09 and entry_bbw <= 0.24
    bbw_multiplier := 2
else if entry_bbw > 0.24 and entry_bbw <= 0.49
    bbw_multiplier := 1
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
longtp1 = strategy.position_avg_price * (1 + TakeProfitPerc)
longtp2 = strategy.position_avg_price * (1 + entry_bbw)
longstop_loss1 = strategy.position_avg_price * (1 - stopProfitPerc)
longstop_loss2 = strategy.position_avg_price - entry_atr * bbw_multiplier //(entry_bbw * bbw_multiplier)
//////////////////////////////////////////////////////////////////////////
shorttp1 = strategy.position_avg_price * (1 - TakeProfitPerc)
shorttp2 = strategy.position_avg_price * (1 - entry_bbw)
shortstop_loss1 = strategy.position_avg_price * (1 + stopProfitPerc)
shortstop_loss2 = strategy.position_avg_price + entry_atr * bbw_multiplier //(entry_bbw * bbw_multiplier)
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
if longonoff 
    strategy.exit("Long Exit", 'LONG', limit=tpkosulselect=='TP-Algo' ? longtp2:longtp1, stop= slkosulselect=='SL-Algo' ? longstop_loss2 : longstop_loss1)

if shortonoff 
    strategy.exit("Short Exit", 'SHORT', limit=tpkosulselect=='TP-Algo' ? shorttp2:shorttp1, stop= slkosulselect=='SL-Algo' ? shortstop_loss2 : shortstop_loss1)
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//STOP PLOT
plot(ISLONGWAY ? slkosulselect=='SL-Algo' ? longstop_loss2 : longstop_loss1 :na, style=plot.style_linebr, color=color.new(#7c2a2a, 20),linewidth=1,  title='Stop Loss Long - Price')
plot(not ISLONGWAY ? slkosulselect=='SL-Algo' ? shortstop_loss2 : shortstop_loss1 :na, style=plot.style_linebr, color=color.new(#7c2a2a,20),linewidth=1,  title='Stop Loss Short - Price')
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//TP PLOT
plot(ISLONGWAY ? tpkosulselect=='TP-Algo' ? longtp2:longtp1 :na,style=plot.style_linebr, color=color.new(#2b752e, 20),linewidth=1, title='Take Profit Long - Price')
plot(not ISLONGWAY ? tpkosulselect=='TP-Algo' ? shorttp2:shorttp1 :na,style=plot.style_linebr, color=color.new(#2b752e, 20),linewidth=1, title='Take Profit Long - Price')







///////////////////////////////////
//AŞŞADAKİ KOŞULLARI KAPATMA STOP KOŞULU OLARAK KULLANILACAK
// Long BB
//bbEntryLong = ta.crossover(close, BB_upper)
// bbEntryLong = close > BB_upper and close > close[1]
// bbExitLong = close < close[1] and close[1] < close[2]

// // Short BB
// //bbEntryShort = ta.crossunder(close, BB_lower)
// bbEntryShort = close < BB_lower and close < close[1]
// bbExitShort = close > close[1] and close[1] > close[2]




